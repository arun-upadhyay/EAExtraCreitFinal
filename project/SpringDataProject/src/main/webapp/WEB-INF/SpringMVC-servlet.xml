<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:util="http://www.springframework.org/schema/util"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="
       http://www.springframework.org/schema/beans 
       http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       http://www.springframework.org/schema/util 
       http://www.springframework.org/schema/util/spring-util-3.0.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context-3.0.xsd
       http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd">

	<context:property-placeholder location="classpath:application.properties" />
	<bean class="org.springframework.jdbc.datasource.DriverManagerDataSource"
		id="dataSource">
		<property value="${db.driver}" name="driverClassName" />
		<property value="${db.url}" name="url" />
		<property value="${db.username}" name="username" />
		<property value="${db.password}" name="password" />
	</bean>
	<!-- Creates the transaction manager bean that integrates the used JPA provider 
		with the Spring transaction mechanism. -->
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>
	
	<!-- Enables annotation-driven transaction management. -->
	
	<!-- Specifies the default settings that are compatible with Hibernate. -->
	<bean id="hibernateJpaVendorAdapter"
		class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter" />

	<!-- Creates the bean that creates the JPA entity manager factory. -->
	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="jpaVendorAdapter" ref="hibernateJpaVendorAdapter" />
		<property name="jpaProperties">
			<props>
				<!-- Configures the used database dialect. This allows Hibernate to create 
					SQL that is optimized for the used database. -->
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>

				<!-- Specifies the action that is invoked to the database when the Hibernate 
					SessionFactory is created or closed. -->
				<prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>

				<!-- Configures the naming strategy that is used when Hibernate creates 
					new database objects and schema elements -->
				<prop key="hibernate.ejb.naming_strategy">${hibernate.ejb.naming_strategy}</prop>

				<!-- If the value of this property is true, Hibernate writes all SQL 
					statements to the console. -->
				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>

				<!-- If the value of this property is true, Hibernate will use prettyprint 
					when it writes SQL to the console. -->
				<prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
			</props>
		</property>
		<property name="packagesToScan" value="edu.mum.example.domain" />
	</bean>

	<bean id="mainApp" class="edu.mum.App" />

	<context:annotation-config />

	<jpa:repositories base-package="edu.mum.example.dao" />
	
	<mvc:annotation-driven />
	<context:component-scan base-package="edu.mum" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass"
			value="org.springframework.web.servlet.view.JstlView" />
		<property name="prefix" value="/WEB-INF/views/" />
		<property name="suffix" value=".jsp" />
	</bean>

	<!-- Lets us find resources (.html etc) through the default servlet -->
	<mvc:default-servlet-handler />


	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources/ directory -->
	<mvc:resources mapping="/resources/**" location="/resources/" />

</beans>